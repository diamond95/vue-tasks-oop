{"remainingRequest":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue?vue&type=template&id=189e9673&scoped=true&","dependencies":[{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue","mtime":1607008795859},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}