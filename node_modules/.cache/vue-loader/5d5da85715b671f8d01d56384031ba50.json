{"remainingRequest":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue?vue&type=template&id=189e9673&scoped=true&","dependencies":[{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue","mtime":1607003433463},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygiZGl2Iiwge30sIFsKICAgICAgX2MoImlucHV0IiwgewogICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICB2YWx1ZTogX3ZtLnRhc2sudGl0bGUsCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YXNrLnRpdGxlIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiIH0sCiAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS50YXNrLnRpdGxlIH0sCiAgICAgICAgb246IHsKICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnRhc2ssICJ0aXRsZSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoImJ1dHRvbiIsIHsgb246IHsgY2xpY2s6IF92bS5hZGRUYXNrIH0gfSwgW192bS5fdigiQWRkIHRvZG8iKV0pCiAgICBdKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgX3ZtLl9sKF92bS50YXNrTGlzdC5pbmNvbXBsZXRlVGFza3MsIGZ1bmN0aW9uKHRhc2spIHsKICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsga2V5OiB0YXNrLmlkLCBzdGF0aWNDbGFzczogInRhc2siIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IHRhc2suaXNDb21wbGV0ZWQsCiAgICAgICAgICAgICAgICAibm90LWNvbXBsZXRlZCI6ICF0YXNrLmlzQ29tcGxldGVkCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyh0YXNrLnRhc2tUaXRsZSkgKyAiICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IHRhc2suY29tcGxldGVkLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGFzay5jb21wbGV0ZWQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkodGFzay5jb21wbGV0ZWQpCiAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKHRhc2suY29tcGxldGVkLCBudWxsKSA+IC0xCiAgICAgICAgICAgICAgICAgIDogdGFzay5jb21wbGV0ZWQKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICB2YXIgJCRhID0gdGFzay5jb21wbGV0ZWQsCiAgICAgICAgICAgICAgICAgICAgJCRlbCA9ICRldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KCQkYSkpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgJCR2ID0gbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICBpZiAoJCRlbC5jaGVja2VkKSB7CiAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmIF92bS4kc2V0KHRhc2ssICJjb21wbGV0ZWQiLCAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgJCRpID4gLTEgJiYKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGFzaywKICAgICAgICAgICAgICAgICAgICAgICAgICAiY29tcGxldGVkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAkJGEuc2xpY2UoMCwgJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KHRhc2ssICJjb21wbGV0ZWQiLCAkJGMpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIH0pLAogICAgICAwCiAgICApLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICBbCiAgICAgICAgX2MoImgxIiwgW192bS5fdigiQ29tcGxldGVkOiIpXSksCiAgICAgICAgX3ZtLl9sKF92bS50YXNrTGlzdC5jb21wbGV0ZWRUYXNrcywgZnVuY3Rpb24odGFzaykgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogdGFzay5pZCwgc3RhdGljQ2xhc3M6ICJ0YXNrIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgIGNvbXBsZXRlZDogdGFzay5pc0NvbXBsZXRlZCwKICAgICAgICAgICAgICAgICAgIm5vdC1jb21wbGV0ZWQiOiAhdGFzay5pc0NvbXBsZXRlZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiICIgKyBfdm0uX3ModGFzay50YXNrVGl0bGUpICsgIiAiKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGFzay5jb21wbGV0ZWQsCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRhc2suY29tcGxldGVkIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgY2hlY2tlZDogQXJyYXkuaXNBcnJheSh0YXNrLmNvbXBsZXRlZCkKICAgICAgICAgICAgICAgICAgICA/IF92bS5faSh0YXNrLmNvbXBsZXRlZCwgbnVsbCkgPiAtMQogICAgICAgICAgICAgICAgICAgIDogdGFzay5jb21wbGV0ZWQKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHZhciAkJGEgPSB0YXNrLmNvbXBsZXRlZCwKICAgICAgICAgICAgICAgICAgICAgICQkZWwgPSAkZXZlbnQudGFyZ2V0LAogICAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoJCRhKSkgewogICAgICAgICAgICAgICAgICAgICAgdmFyICQkdiA9IG51bGwsCiAgICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICAgIGlmICgkJGVsLmNoZWNrZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJCRpIDwgMCAmJgogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KHRhc2ssICJjb21wbGV0ZWQiLCAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICQkaSA+IC0xICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXNrLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbXBsZXRlZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGEuc2xpY2UoMCwgJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQodGFzaywgImNvbXBsZXRlZCIsICQkYykKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICB9KQogICAgICBdLAogICAgICAyCiAgICApCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}