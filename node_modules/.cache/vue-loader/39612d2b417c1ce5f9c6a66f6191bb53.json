{"remainingRequest":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\HelloWorld.vue","mtime":1607003314657},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUb2RvTGlzdCBmcm9tICdAL21vZGVscy9Ub2RvL1RvZG9MaXN0JzsKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWUgICAgOiAiVGFza0xpc3QiLAoJbW91bnRlZCgpCgl7Cgl9LAoJZGF0YSgpCgl7CgkJcmV0dXJuIHsKCgkJCXRhc2sgOiB7CgkJCQl0aXRsZSA6ICIiCgkJCX0sCgoJCQl0YXNrTGlzdCA6IG5ldyBUb2RvTGlzdCgpCgoJCX07Cgl9LAoJbWV0aG9kcyA6IHsKCQlhZGRUYXNrKCkKCQl7CgkJCWlmICh0aGlzLnRhc2sudGl0bGUudHJpbSgpID09PSAiIikgcmV0dXJuOwoKCQkJdGhpcy50YXNrTGlzdC5jcmVhdGUodGhpcy50YXNrLnRpdGxlKTsKCgkJCXRoaXMudGFzay50aXRsZSA9ICIiOwoJCX0KCX0KfTsK"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n\n    <div>\n\n        <div class=\"\">\n            <input type=\"text\" v-model=\"task.title\">\n            <button @click=\"addTask\">Add todo</button>\n        </div>\n\n        <div>\n            <div class=\"task\" v-for=\"(task) in taskList.incompleteTasks\" :key=\"task.id\">\n                <div :class=\"{'completed' : task.isCompleted, 'not-completed' : !task.isCompleted}\">\n                    {{task.taskTitle}}\n                </div>\n                <div>\n                    <input type=\"checkbox\" v-model=\"task.completed\">\n                </div>\n\n            </div>\n        </div>\n\n        <div>\n            <h1>Completed:</h1>\n\n            <div class=\"task\" v-for=\"(task) in taskList.completedTasks\" :key=\"task.id\">\n                <div :class=\"{'completed' : task.isCompleted, 'not-completed' : !task.isCompleted}\">\n                    {{task.taskTitle}}\n                </div>\n                <div>\n                    <input type=\"checkbox\" v-model=\"task.completed\">\n                </div>\n\n            </div>\n        </div>\n\n\n    </div>\n\n</template>\n\n<script>\n\timport TodoList from '@/models/Todo/TodoList';\n\n\texport default {\n\t\tname    : \"TaskList\",\n\t\tmounted()\n\t\t{\n\t\t},\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\n\t\t\t\ttask : {\n\t\t\t\t\ttitle : \"\"\n\t\t\t\t},\n\n\t\t\t\ttaskList : new TodoList()\n\n\t\t\t};\n\t\t},\n\t\tmethods : {\n\t\t\taddTask()\n\t\t\t{\n\t\t\t\tif (this.task.title.trim() === \"\") return;\n\n\t\t\t\tthis.taskList.create(this.task.title);\n\n\t\t\t\tthis.task.title = \"\";\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<style scoped lang=\"scss\">\n\n    .task {\n        display: flex;\n        flex-direction: row;\n    }\n\n    .completed {\n        color: green;\n    }\n\n    .not-completed {\n        color: red;\n    }\n</style>\n"]}]}