{"remainingRequest":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\src\\components\\TaskList.vue","mtime":1607008795859},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iMiljanic\\Documents\\Vue\\vue-tasks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVG9kb0xpc3QgZnJvbSAnQC9tb2RlbHMvVG9kby9Ub2RvTGlzdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGFza0xpc3QiLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFzazogewogICAgICAgIHRpdGxlOiAiIgogICAgICB9LAogICAgICB0YXNrTGlzdDogbmV3IFRvZG9MaXN0KCkKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUYXNrOiBmdW5jdGlvbiBhZGRUYXNrKCkgewogICAgICBpZiAodGhpcy50YXNrLnRpdGxlLnRyaW0oKSA9PT0gIiIpIHJldHVybjsKICAgICAgdGhpcy50YXNrTGlzdC5jcmVhdGUodGhpcy50YXNrLnRpdGxlKTsKICAgICAgdGhpcy50YXNrLnRpdGxlID0gIiI7CiAgICB9LAogICAgY2xlYXJUYXNrczogZnVuY3Rpb24gY2xlYXJUYXNrcygpIHsKICAgICAgdGhpcy50YXNrTGlzdC5yZW1vdmVUYXNrcygpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,QAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,OAFA,qBAEA,CAEA,CAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAFA;AAMA,MAAA,QAAA,EAAA,IAAA,QAAA;AANA,KAAA;AASA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,KAAA,IAAA,CAAA,KAAA,CAAA,IAAA,OAAA,EAAA,EAAA;AAEA,WAAA,QAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,KAAA;AAEA,WAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAPA;AASA,IAAA,UAAA,EAAA,sBAAA;AAEA,WAAA,QAAA,CAAA,WAAA;AACA;AAZA;AAhBA,CAAA","sourcesContent":["<template>\n\n\n    <div class=\"main\">\n\n        <div>\n            <input type=\"text\" class=\"addInput\" v-model=\"task.title\" placeholder=\"Type something...\">\n            <button @click=\"addTask\" class=\"addBtn\">Add todo</button>\n        </div>\n\n        <div v-if=\"taskList.incompleteTasks.length > 0\">\n            <h1>Incompleted:</h1>\n            <div class=\"task\" v-for=\"task in taskList.incompleteTasks\" :key=\"task.id\">\n                <div :class=\"{'completed' : task.isCompleted, 'not-completed' : !task.isCompleted}\">\n                    {{task.taskTitle}}\n                    <input type=\"checkbox\" v-model=\"task.completed\" >\n                </div>\n            </div>\n        </div>\n\n        <div v-if=\"taskList.completedTasks.length > 0\">\n            <h1>Completed:</h1>\n\n            <div class=\"task\" v-for=\"task in taskList.completedTasks\" :key=\"task.id\">\n                <div :class=\"{'completed' : task.isCompleted, 'not-completed' : !task.isCompleted}\">\n                    {{task.taskTitle}}\n                    <input type=\"checkbox\" v-model=\"task.completed\" >\n                </div>\n            </div>\n        </div>\n\n        <div v-if=\"taskList.allTasks.length > 0\">\n            <h1>All tasks:</h1>\n\n            <div class=\"task\" v-for=\"task in taskList.allTasks\" :key=\"task.id\">\n                <div :class=\"{'completed' : task.isCompleted, 'not-completed' : !task.isCompleted}\">\n                    {{task.taskTitle}}\n                </div>\n            </div>\n        </div>\n        <div v-if=\"taskList.allTasks.length > 0\">\n            <button @click=\"clearTasks\" class=\"clearTasksBtn\">Remove all tasks</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\timport TodoList from '@/models/Todo/TodoList';\n\n\texport default {\n\t\tname    : \"TaskList\",\n\t\tmounted()\t{\n\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\n\t\t\t\ttask : {\n                    title : \"\"\n\t\t\t\t},\n\n\t\t\t\ttaskList : new TodoList()\n\n\t\t\t};\n\t\t},\n\t\tmethods : {\n\t\t\taddTask: function()\t{\n\t\t\t\tif (this.task.title.trim() === \"\") return;\n\n\t\t\t\tthis.taskList.create(this.task.title);\n\n\t\t\t\tthis.task.title = \"\";\n            },\n\n            clearTasks: function() {\n\n                this.taskList.removeTasks();\n            }\n\t\t}\n\t};\n</script>\n\n<style scoped lang=\"css\">\n\n    .task {\n        flex-direction: column;\n    }\n\n    .completed {\n        color: green;\n        \n    }\n\n    .not-completed {\n        color: red;\n    }\n\n    .addBtn {\n        background-color: green;\n    }\n    *{\n        /* padding: 0px; */\n        box-sizing: border-box;\n        /*margin: 0px 0px 0px 0px; */\n    }\n\n    button {\n        color: white;\n        border: 2px solid black;\n        height: 2em;\n        margin: 2px;\n    }\n    input .addInput  {\n        height: 2em;\n    }\n\n    .clearTasksBtn {\n        background-color: red;\n    }\n\n</style>\n"],"sourceRoot":"src/components"}]}